name: simplified-mutable-ci

on:
  # only trigger by hand
  workflow_dispatch:
    inputs:
      stage:
        description: 'all / build / test'
        required: true
        default: all
        type: choice
        options: [all, build, test]
        #options: [all, build, test, coverage]

permissions:
  contents: read
  
jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      CC: clang
      CXX: clang++
    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 0}

      # LLVM / Clang 18
      - name: LLVM / Clang 18
        run: | 
          wget -qO- https://apt.llvm.org/llvm.sh | sudo bash -s -- 18
          echo "/usr/lib/llvm-18/bin" >> $GITHUB_PATH
          sudo apt-get update && sudo apt-get install -y ninja-build libboost-dev libtbb-dev libfmt-dev

      # generate gitversion.tbl
      - name: Generate gitversion.tbl
        run: |
          REV=$(git rev-parse --short HEAD)
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          TAG=$(git describe --tags --always --dirty)
          cat > include/mutable/gitversion.tbl <<'EOF'
          constexpr const char GIT_REV[]      = "${REV}";
          constexpr const char GIT_BRANCH[]   = "${BRANCH}";
          constexpr const char SEM_VERSION[]  = "${TAG}";
          EOF

      # Configure & Build
      - name: Configure & Build
        run: |
          cmake -S . -B build -G Ninja -LAH \
                -DWITH_V8=OFF \
                -DTHIRD_PARTY_BOOST=OFF \
                -DENABLE_SANITIZERS=OFF \
                -DMUTABLE_ENABLE_TESTS=ON \
                -DBUILD_TESTING=ON \
                -DCMAKE_BUILD_TYPE=Debug
          cmake --build build -j$(nproc)
  
      - uses: actions/upload-artifact@v4
        with:
          name: mutable-build
          path: build

  # ---------------------------------------
  test:
    if: github.actor == github.repository_owner && (inputs.stage == 'all' || inputs.stage == 'test')
    needs: build
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/download-artifact@v4
        with: { name: mutable-build, path: build }
      - name: Restore file permissions
        run: |
          chmod -R +r build/
          find build -type f -name "*.cmake" -exec chmod +r {} \;
          find build -type f -executable -exec chmod +x {} \;  
      - name: Run unit tests
        run: |
          pwd
          #ls build/CTestTestfile.cmake
          #cat build/CTestTestfile.cmake
          #cat CTestTestfile.cmake
          ls .
          echo "---"
          ls build/
          echo "---"
          ls build/unittest
          echo "---"
          cat build/unittest/CTestTestfile.cmake
          echo "---"          
          cat build/CMakeLists.txt
          echo "---"
          cat build/unittest/CMakeLists.txt
          #find build
          cd build
          ctest -VV --test-dir . --output-on-failure

  # ---------------------------------------
  # coverage:
  #  if: github.actor == github.repository_owner && (inputs.stage == 'all' || inputs.stage == 'coverage')
  #  needs: build
  #  runs-on: ubuntu-22.04
  #  timeout-minutes: 30
  #  steps:
  #    - uses: actions/download-artifact@v4
  #      with: { name: mutable-build, path: build }
  #    - name: Run tests w/ coverage
  #      run: |
  #        cmake --build build --target coverage
  #        lcov --remove build/coverage.info '/usr/*' -o coverage.info
  #    - name: Upload LCOV report
  #      uses: codecov/codecov-action@v4
  #      with:
  #        files: coverage.info
