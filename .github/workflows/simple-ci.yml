name: simplifyed-mutable-ci

on:
  # only trigger by hand
  workflow_dispatch:
    inputs:
      stage:
        description: 'all / build / test / coverage / docs'
        required: true
        default: all
        type: choice
        options: [all, build, test, coverage, docs]

permissions:
  contents: read

jobs:
  build:
    if: github.actor == github.repository_owner &&
        (inputs.stage == 'all' || inputs.stage == 'build')
    runs-on: ubuntu-22.04
    timeout-minutes: 40

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build g++ lcov llvm-dev \
                                 libtbb-dev libfmt-dev libboost-dev

      - name: Configure (GCC + Ninja)
        run: |
          cmake -S . -B build -G Ninja \
                -DCMAKE_BUILD_TYPE=Release \
                -DMUTABLE_ENABLE_TESTS=ON \
                -DBUILD_SHARED_LIBS=ON \
                -DWITH_V8=OFF

      - name: Build
        run: cmake --build build --parallel

      - uses: actions/upload-artifact@v4
        with:
          name: mutable-build
          path: build

  # ---------------------------------------
  test:
    if: github.actor == github.repository_owner && (inputs.stage == 'all' || inputs.stage == 'test')
    needs: build
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - uses: actions/download-artifact@v4
        with: { name: mutable-build, path: build }
      - name: Run unit tests
        run: ctest --test-dir build --output-on-failure

  # ---------------------------------------
  coverage:
    if: github.actor == github.repository_owner && (inputs.stage == 'all' || inputs.stage == 'coverage')
    needs: build
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
      - uses: actions/download-artifact@v4
        with: { name: mutable-build, path: build }
      - name: Run tests w/ coverage
        run: |
          cmake --build build --target coverage
          lcov --remove build/coverage.info '/usr/*' -o coverage.info
      - name: Upload LCOV report
        uses: codecov/codecov-action@v4
        with:
          files: coverage.info
